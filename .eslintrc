{
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "env": {
        "browser": true,
        "node": true
    },
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": [
        "react",
        "react-hooks"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended"
    ],
    "rules": {
        "react/no-unescaped-entities": "off",
        "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
        "react-hooks/exhaustive-deps": "off", // Checks effect dependencies
        // suppress errors for missing 'import React' in files
        "react/react-in-jsx-scope": "off",
        // allow jsx syntax in js files (for next.js project)
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [
                    ".js",
                    ".jsx"
                ]
            }
        ], //should add ".ts" if typescript project
        "no-prototype-builtins": 0,
        "no-constant-condition": 2, // disallow use of constant expressions in conditions
        "no-cond-assign": 2, // disallow assignment in conditional expressions
        "no-console": 2, // disallow use of console (off by default in the node environment)
        "comma-dangle": 1, // disallow or enforce trailing commas
        // "comma-dangle": [1, {
        //   arrays: "always",
        //   objects: "never",
        //   imports: "never",
        //   exports: "never",
        //   functions: "never"
        // }],
        "react/prop-types": 0, // Prevent missing props validation in a React component definition
        "no-debugger": 2, // disallow use of debugger
        "no-dupe-args": 2, // disallow duplicate arguments in functions
        "no-dupe-keys": 2, // disallow duplicate keys when creating object literals
        "no-duplicate-case": 2, // disallow a duplicate case label.
        "no-empty": 2, // disallow empty statements
        "no-empty-character-class": 2, // disallow the use of empty character classes in regular expressions
        "no-ex-assign": 2, // disallow assigning to the exception in a catch block
        "no-extra-boolean-cast": 2, // disallow double-negation boolean casts in a boolean context
        "no-extra-parens": 0, // disallow unnecessary parentheses (off by default)
        "no-extra-semi": 2, // disallow unnecessary semicolons
        // "no-func-assign": 2, // disallow overwriting functions written as function declarations
        // "no-inner-declarations": 2, // disallow function or variable declarations in nested blocks
        "no-invalid-regexp": 2, // disallow invalid regular expression strings in the RegExp constructor
        // "no-irregular-whitespace": 2, // disallow irregular whitespace outside of strings and comments
        "no-negated-in-lhs": 2, // disallow negation of the left operand of an in expression
        "no-obj-calls": 2, // disallow the use of object properties of the global object (Math and JSON) as functions
        "no-regex-spaces": 2, // disallow multiple spaces in a regular expression literal
        "quote-props": [
            1,
            "as-needed"
        ], // disallow reserved words being used as object literal keys (off by default)
        "no-sparse-arrays": 2, // disallow sparse arrays
        "no-unreachable": 2, // disallow unreachable statements after a return, throw, continue, or break statement
        "use-isnan": 2, // disallow comparisons with the value NaN
        "valid-jsdoc": 2, // Ensure JSDoc comments are valid (off by default)
        "valid-typeof": 2, // Ensure that the results of typeof are compared against a valid string
        "curly": 2, // specify curly brace conventions for all control statements
        "default-case": 2, // require default case in switch statements (off by default)
        "dot-notation": 2, // encourages use of dot notation whenever possible
        "eqeqeq": 2, // require the use of === and !==
        "no-multi-spaces": 2, // disallow use of multiple spaces
        "no-multi-str": 2, // disallow use of multiline strings
        "no-redeclare": 2, // disallow declaring the same variable more then once
        "no-return-assign": 2, // disallow use of assignment in return statement
        "no-script-url": 2, // disallow use of javascript: urls.
        "no-self-compare": 2, // disallow comparisons where both sides are exactly the same (off by default)
        "no-sequences": 2, // disallow use of comma operator
        "no-warning-comments": [
            0,
            {
                "terms": [
                    "todo",
                    "fixme"
                ],
                "location": "start"
            }
        ], // disallow usage of configurable warning terms in comments": 2, // e.g. TODO or FIXME (off by default)
        // These rules are only relevant to ES6 environments and are off by default.
        "no-var": 2, // require let or const instead of var (off by default)
        "generator-star-spacing": [
            2,
            "after"
        ], // enforce the spacing around the * in generator functions (off by default)
        "radix": [
            "error",
            "as-needed"
        ], // require use of the second argument for parseInt() (off by default)
        "no-shadow": 2, // disallow declaration of variables already declared in the outer scope
        "no-use-before-define": 2, // disallow use of variables before they are defined
        //Stylistic Issues
        "eol-last": 1, // enforce newline at the end of file, with no multiple empty lines
        // "indent": [1, 2], // this option sets a specific tab width for your code (off by default)
        "brace-style": 2,
        "camelcase": 2, // require camel case names
        "comma-spacing": [
            2,
            {
                "before": false,
                "after": true
            }
        ], // enforce spacing before and after comma
        "comma-style": [
            2,
            "last"
        ], // enforce one true comma style (off by default)"eol-last": 1, // enforce newline at the end of file, with no multiple empty lines
        // "func-style": ["error", "expression"],
        "key-spacing": [
            2,
            {
                "beforeColon": false,
                "afterColon": true
            }
        ], // enforces spacing between keys and values in object literal properties
        "no-inline-comments": 0, // disallow comments inline after code (off by default)
        // "no-lonely-if": 2, // disallow if as the only statement in an else block (off by default)
        "no-mixed-spaces-and-tabs": 2, // disallow mixed spaces and tabs for indentation
        "no-multiple-empty-lines": [
            2,
            {
                "max": 2
            }
        ], // disallow multiple empty lines (off by default)
        "no-spaced-func": 2, // disallow space between function identifier and application
        "no-trailing-spaces": 2, // disallow trailing whitespace at the end of lines
        "quotes": [
            2,
            "double"
        ], // specify whether double or single quotes should be used
        "semi": [
            1,
            "always"
        ], // require or disallow use of semicolons instead of ASI
        "semi-spacing": [
            1,
            {
                "before": false,
                "after": true
            }
        ], // enforce spacing before and after semicolons
        "keyword-spacing": [
            "error",
            {
                "before": true
            }
        ], // require a space after certain keywords (off by default)
        "space-before-function-paren": [
            1,
            {
                "anonymous": "always",
                "named": "never"
            }
        ], // require or disallow space before function opening parenthesis (off by default)
        // "space-in-brackets": [1, "never"], // require or disallow spaces inside brackets (off by default)
        "space-in-parens": [
            1,
            "never"
        ], // require or disallow spaces inside parentheses (off by default)
        // "space-infix-ops": [1, "always"], // require spaces around operators
        // "spaced-line-comment": [1, "always"], // require or disallow a space immediately following the // in a line comment (off by default)
        "react/display-name": 0
    }
}